// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Stetic {
    
    internal class Gui {
        
        public static void Build(object obj, System.Type type) {
            Stetic.Gui.Build(obj, type.FullName);
        }
        
        public static void Build(object obj, string id) {
            System.Collections.Hashtable bindings = new System.Collections.Hashtable();
            if ((id == "SharpTranslator.LearnWindow")) {
                Gtk.Window cobj = ((Gtk.Window)(obj));
                // Widget SharpTranslator.LearnWindow
                cobj.WindowPosition = ((Gtk.WindowPosition)(1));
                cobj.AllowGrow = false;
                cobj.Resizable = false;
                cobj.Name = "SharpTranslator.LearnWindow";
                cobj.Events = ((Gdk.EventMask)(0));
                // Container child SharpTranslator.LearnWindow.Gtk.Container+ContainerChild
                Gtk.VBox w1 = new Gtk.VBox();
                w1.BorderWidth = ((uint)(3));
                w1.Spacing = 5;
                w1.Name = "vbox1";
                w1.Events = ((Gdk.EventMask)(0));
                // Container child vbox1.Gtk.Box+BoxChild
                Gtk.HBox w2 = new Gtk.HBox();
                w2.BorderWidth = ((uint)(3));
                w2.Name = "hbox5";
                w2.Events = ((Gdk.EventMask)(0));
                // Container child hbox5.Gtk.Box+BoxChild
                Gtk.Label w3 = new Gtk.Label();
                w3.LabelProp = "Type of item:";
                w3.Name = "label1";
                w3.Events = ((Gdk.EventMask)(0));
                bindings["label1"] = w3;
                w2.Add(w3);
                Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(w2[w3]));
                w4.Fill = false;
                w4.Expand = false;
                w4.Position = 0;
                // Container child hbox5.Gtk.Box+BoxChild
                Gtk.HBox w5 = new Gtk.HBox();
                w5.Name = "hbox4";
                w5.Events = ((Gdk.EventMask)(0));
                // Container child hbox4.Gtk.Box+BoxChild
                Gtk.CheckButton w6 = new Gtk.CheckButton();
                w6.Label = "Word";
                w6.DrawIndicator = true;
                w6.Active = true;
                w6.Name = "checkbWord";
                w6.CanFocus = true;
                w6.Events = ((Gdk.EventMask)(0));
                bindings["checkbWord"] = w6;
                w5.Add(w6);
                Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(w5[w6]));
                w7.Position = 0;
                // Container child hbox4.Gtk.Box+BoxChild
                Gtk.CheckButton w8 = new Gtk.CheckButton();
                w8.Label = "Expression";
                w8.DrawIndicator = true;
                w8.Name = "checkbExpression";
                w8.CanFocus = true;
                w8.Events = ((Gdk.EventMask)(0));
                bindings["checkbExpression"] = w8;
                w5.Add(w8);
                Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(w5[w8]));
                w9.Position = 1;
                bindings["hbox4"] = w5;
                w2.Add(w5);
                Gtk.Box.BoxChild w10 = ((Gtk.Box.BoxChild)(w2[w5]));
                w10.Expand = false;
                w10.Position = 1;
                bindings["hbox5"] = w2;
                w1.Add(w2);
                Gtk.Box.BoxChild w11 = ((Gtk.Box.BoxChild)(w1[w2]));
                w11.Fill = false;
                w11.Expand = false;
                w11.Position = 0;
                // Container child vbox1.Gtk.Box+BoxChild
                Gtk.HBox w12 = new Gtk.HBox();
                w12.BorderWidth = ((uint)(3));
                w12.Spacing = 5;
                w12.Name = "hbox2";
                w12.Events = ((Gdk.EventMask)(0));
                // Container child hbox2.Gtk.Box+BoxChild
                Gtk.Label w13 = new Gtk.Label();
                w13.LabelProp = "Source Language:";
                w13.Name = "labelSource";
                w13.Events = ((Gdk.EventMask)(0));
                bindings["labelSource"] = w13;
                w12.Add(w13);
                Gtk.Box.BoxChild w14 = ((Gtk.Box.BoxChild)(w12[w13]));
                w14.Fill = false;
                w14.Expand = false;
                w14.Position = 0;
                // Container child hbox2.Gtk.Box+BoxChild
                Gtk.ComboBox w15 = Gtk.ComboBox.NewText();
                w15.Name = "comboSource";
                w15.Events = ((Gdk.EventMask)(0));
                bindings["comboSource"] = w15;
                w12.Add(w15);
                Gtk.Box.BoxChild w16 = ((Gtk.Box.BoxChild)(w12[w15]));
                w16.Fill = false;
                w16.Expand = false;
                w16.Position = 1;
                // Container child hbox2.Gtk.Box+BoxChild
                Gtk.Label w17 = new Gtk.Label();
                w17.LabelProp = "Target Language:";
                w17.Name = "labelTarget";
                w17.Events = ((Gdk.EventMask)(0));
                bindings["labelTarget"] = w17;
                w12.Add(w17);
                Gtk.Box.BoxChild w18 = ((Gtk.Box.BoxChild)(w12[w17]));
                w18.Fill = false;
                w18.Expand = false;
                w18.Position = 2;
                // Container child hbox2.Gtk.Box+BoxChild
                Gtk.ComboBox w19 = Gtk.ComboBox.NewText();
                w19.Name = "comboTarget";
                w19.Events = ((Gdk.EventMask)(0));
                bindings["comboTarget"] = w19;
                w12.Add(w19);
                Gtk.Box.BoxChild w20 = ((Gtk.Box.BoxChild)(w12[w19]));
                w20.Fill = false;
                w20.Expand = false;
                w20.Position = 3;
                bindings["hbox2"] = w12;
                w1.Add(w12);
                Gtk.Box.BoxChild w21 = ((Gtk.Box.BoxChild)(w1[w12]));
                w21.Fill = false;
                w21.Expand = false;
                w21.Position = 1;
                // Container child vbox1.Gtk.Box+BoxChild
                Gtk.HBox w22 = new Gtk.HBox();
                w22.BorderWidth = ((uint)(3));
                w22.Spacing = 5;
                w22.Name = "hbox3";
                w22.Events = ((Gdk.EventMask)(0));
                // Container child hbox3.Gtk.Box+BoxChild
                Gtk.Label w23 = new Gtk.Label();
                w23.LabelProp = "Text:";
                w23.Name = "labelText";
                w23.Events = ((Gdk.EventMask)(0));
                bindings["labelText"] = w23;
                w22.Add(w23);
                Gtk.Box.BoxChild w24 = ((Gtk.Box.BoxChild)(w22[w23]));
                w24.Fill = false;
                w24.Expand = false;
                w24.Position = 0;
                // Container child hbox3.Gtk.Box+BoxChild
                Gtk.Entry w25 = new Gtk.Entry();
                w25.IsEditable = true;
                w25.InvisibleChar = '●';
                w25.Name = "entryText";
                w25.CanFocus = true;
                w25.Events = ((Gdk.EventMask)(0));
                bindings["entryText"] = w25;
                w22.Add(w25);
                Gtk.Box.BoxChild w26 = ((Gtk.Box.BoxChild)(w22[w25]));
                w26.Position = 1;
                // Container child hbox3.Gtk.Box+BoxChild
                Gtk.Label w27 = new Gtk.Label();
                w27.LabelProp = "Translation:";
                w27.Name = "label3";
                w27.Events = ((Gdk.EventMask)(0));
                bindings["label3"] = w27;
                w22.Add(w27);
                Gtk.Box.BoxChild w28 = ((Gtk.Box.BoxChild)(w22[w27]));
                w28.Fill = false;
                w28.Expand = false;
                w28.Position = 2;
                // Container child hbox3.Gtk.Box+BoxChild
                Gtk.Entry w29 = new Gtk.Entry();
                w29.IsEditable = true;
                w29.InvisibleChar = '●';
                w29.Name = "entryTranslation";
                w29.CanFocus = true;
                w29.Events = ((Gdk.EventMask)(0));
                bindings["entryTranslation"] = w29;
                w22.Add(w29);
                Gtk.Box.BoxChild w30 = ((Gtk.Box.BoxChild)(w22[w29]));
                w30.Position = 3;
                bindings["hbox3"] = w22;
                w1.Add(w22);
                Gtk.Box.BoxChild w31 = ((Gtk.Box.BoxChild)(w1[w22]));
                w31.Fill = false;
                w31.Expand = false;
                w31.Position = 2;
                // Container child vbox1.Gtk.Box+BoxChild
                Gtk.HSeparator w32 = new Gtk.HSeparator();
                w32.Name = "hseparator1";
                w32.Events = ((Gdk.EventMask)(0));
                bindings["hseparator1"] = w32;
                w1.Add(w32);
                Gtk.Box.BoxChild w33 = ((Gtk.Box.BoxChild)(w1[w32]));
                w33.Fill = false;
                w33.Expand = false;
                w33.Position = 3;
                // Container child vbox1.Gtk.Box+BoxChild
                Gtk.HButtonBox w34 = new Gtk.HButtonBox();
                w34.BorderWidth = ((uint)(3));
                w34.Spacing = 3;
                w34.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                w34.Name = "hbuttonbox1";
                w34.Events = ((Gdk.EventMask)(0));
                // Container child hbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
                Gtk.Button w35 = new Gtk.Button();
                w35.Name = "buttonCancel";
                w35.CanFocus = true;
                w35.Events = ((Gdk.EventMask)(0));
                // Container child buttonCancel.Gtk.Container+ContainerChild
                Gtk.Alignment w36 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
                w36.Name = "GtkAlignment";
                w36.Events = ((Gdk.EventMask)(0));
                // Container child GtkAlignment.Gtk.Container+ContainerChild
                Gtk.HBox w37 = new Gtk.HBox();
                w37.Spacing = 2;
                w37.Name = "GtkHBox";
                w37.Events = ((Gdk.EventMask)(0));
                // Container child GtkHBox.Gtk.Container+ContainerChild
                Gtk.Image w38 = new Gtk.Image();
                w38.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-cancel", 16, 0);
                w38.Name = "image2";
                w38.Events = ((Gdk.EventMask)(0));
                bindings["image2"] = w38;
                w37.Add(w38);
                // Container child GtkHBox.Gtk.Container+ContainerChild
                Gtk.Label w40 = new Gtk.Label();
                w40.LabelProp = "Cancel";
                w40.Name = "GtkLabel";
                w40.Events = ((Gdk.EventMask)(0));
                bindings["GtkLabel"] = w40;
                w37.Add(w40);
                bindings["GtkHBox"] = w37;
                w36.Add(w37);
                bindings["GtkAlignment"] = w36;
                w35.Add(w36);
                bindings["buttonCancel"] = w35;
                w34.Add(w35);
                Gtk.ButtonBox.ButtonBoxChild w44 = ((Gtk.ButtonBox.ButtonBoxChild)(w34[w35]));
                w44.Fill = false;
                w44.Expand = false;
                // Container child hbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
                Gtk.Button w45 = new Gtk.Button();
                w45.Name = "buttonAccept";
                w45.CanFocus = true;
                w45.Events = ((Gdk.EventMask)(0));
                // Container child buttonAccept.Gtk.Container+ContainerChild
                Gtk.Alignment w46 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
                w46.Name = "GtkAlignment";
                w46.Events = ((Gdk.EventMask)(0));
                // Container child GtkAlignment.Gtk.Container+ContainerChild
                Gtk.HBox w47 = new Gtk.HBox();
                w47.Spacing = 2;
                w47.Name = "GtkHBox";
                w47.Events = ((Gdk.EventMask)(0));
                // Container child GtkHBox.Gtk.Container+ContainerChild
                Gtk.Image w48 = new Gtk.Image();
                w48.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-ok", 16, 0);
                w48.Name = "image3";
                w48.Events = ((Gdk.EventMask)(0));
                bindings["image3"] = w48;
                w47.Add(w48);
                // Container child GtkHBox.Gtk.Container+ContainerChild
                Gtk.Label w50 = new Gtk.Label();
                w50.LabelProp = "Accept";
                w50.Name = "GtkLabel";
                w50.Events = ((Gdk.EventMask)(0));
                bindings["GtkLabel"] = w50;
                w47.Add(w50);
                bindings["GtkHBox"] = w47;
                w46.Add(w47);
                bindings["GtkAlignment"] = w46;
                w45.Add(w46);
                bindings["buttonAccept"] = w45;
                w34.Add(w45);
                Gtk.ButtonBox.ButtonBoxChild w54 = ((Gtk.ButtonBox.ButtonBoxChild)(w34[w45]));
                w54.Fill = false;
                w54.Expand = false;
                w54.Position = 1;
                bindings["hbuttonbox1"] = w34;
                w1.Add(w34);
                Gtk.Box.BoxChild w55 = ((Gtk.Box.BoxChild)(w1[w34]));
                w55.Fill = false;
                w55.Expand = false;
                w55.Position = 4;
                bindings["vbox1"] = w1;
                cobj.Add(w1);
                cobj.DefaultWidth = 586;
                cobj.DefaultHeight = 190;
                bindings["SharpTranslator.LearnWindow"] = cobj;
                w3.Show();
                w6.Show();
                w8.Show();
                w5.Show();
                w2.Show();
                w13.Show();
                w15.Show();
                w17.Show();
                w19.Show();
                w12.Show();
                w23.Show();
                w25.Show();
                w27.Show();
                w29.Show();
                w22.Show();
                w32.Show();
                w38.Show();
                w40.Show();
                w37.Show();
                w36.Show();
                w35.Show();
                w48.Show();
                w50.Show();
                w47.Show();
                w46.Show();
                w45.Show();
                w34.Show();
                w1.Show();
                cobj.Show();
                cobj.DeleteEvent += ((Gtk.DeleteEventHandler)(System.Delegate.CreateDelegate(typeof(Gtk.DeleteEventHandler), cobj, "OnCancel")));
                w35.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnCancel")));
                w45.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnAccept")));
            }
            else {
                if ((id == "SharpTranslator.AboutDialog")) {
                    Gtk.Dialog cobj = ((Gtk.Dialog)(obj));
                    // Widget SharpTranslator.AboutDialog
                    cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                    cobj.Title = "AboutDialog";
                    cobj.HasSeparator = false;
                    cobj.Name = "SharpTranslator.AboutDialog";
                    cobj.Events = ((Gdk.EventMask)(256));
                    // Internal child SharpTranslator.AboutDialog.VBox
                    Gtk.VBox w1 = cobj.VBox;
                    w1.BorderWidth = ((uint)(2));
                    w1.Name = "dialog_VBox";
                    w1.Events = ((Gdk.EventMask)(256));
                    // Container child dialog_VBox.Gtk.Box+BoxChild
                    Gtk.TextView w2 = new Gtk.TextView();
                    w2.Buffer.Text = "\n         SharpTranslator\n\n    Version 0.1  (August 2006)\n\n    License: GPL\n\n    Author: Carlos Ble <http://www.shidix.com/carlosble>\n\n    English-Spanish dictionary was taken from i2e:\n          (Alfredo Casademunt, Jose Luis Triviño)\n\n";
                    w2.Editable = false;
                    w2.Name = "textview1";
                    w2.CanFocus = true;
                    w2.Events = ((Gdk.EventMask)(0));
                    bindings["textview1"] = w2;
                    w1.Add(w2);
                    Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(w1[w2]));
                    w3.Position = 0;
                    // Container child dialog_VBox.Gtk.Box+BoxChild
                    Gtk.HSeparator w4 = new Gtk.HSeparator();
                    w4.Name = "hseparator1";
                    w4.Events = ((Gdk.EventMask)(0));
                    bindings["hseparator1"] = w4;
                    w1.Add(w4);
                    Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(w1[w4]));
                    w5.Fill = false;
                    w5.Expand = false;
                    w5.Position = 1;
                    bindings["dialog_VBox"] = w1;
                    // Internal child SharpTranslator.AboutDialog.ActionArea
                    Gtk.HButtonBox w6 = cobj.ActionArea;
                    w6.BorderWidth = ((uint)(5));
                    w6.Spacing = 10;
                    w6.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                    w6.Name = "SharpTranslator.AboutDialog_ActionArea";
                    w6.Events = ((Gdk.EventMask)(256));
                    // Container child SharpTranslator.AboutDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
                    Gtk.Button w7 = new Gtk.Button();
                    w7.Name = "buttonClose";
                    w7.CanFocus = true;
                    w7.CanDefault = true;
                    w7.Events = ((Gdk.EventMask)(0));
                    // Container child buttonClose.Gtk.Container+ContainerChild
                    Gtk.Alignment w8 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
                    w8.Name = "GtkAlignment";
                    w8.Events = ((Gdk.EventMask)(0));
                    // Container child GtkAlignment.Gtk.Container+ContainerChild
                    Gtk.HBox w9 = new Gtk.HBox();
                    w9.Spacing = 2;
                    w9.Name = "GtkHBox";
                    w9.Events = ((Gdk.EventMask)(0));
                    // Container child GtkHBox.Gtk.Container+ContainerChild
                    Gtk.Image w10 = new Gtk.Image();
                    w10.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-close", 16, 0);
                    w10.Name = "image1";
                    w10.Events = ((Gdk.EventMask)(0));
                    bindings["image1"] = w10;
                    w9.Add(w10);
                    // Container child GtkHBox.Gtk.Container+ContainerChild
                    Gtk.Label w12 = new Gtk.Label();
                    w12.LabelProp = "Close";
                    w12.Name = "GtkLabel";
                    w12.Events = ((Gdk.EventMask)(0));
                    bindings["GtkLabel"] = w12;
                    w9.Add(w12);
                    bindings["GtkHBox"] = w9;
                    w8.Add(w9);
                    bindings["GtkAlignment"] = w8;
                    w7.Add(w8);
                    bindings["buttonClose"] = w7;
                    cobj.AddActionWidget(w7, 0);
                    Gtk.ButtonBox.ButtonBoxChild w16 = ((Gtk.ButtonBox.ButtonBoxChild)(w6[w7]));
                    w16.Fill = false;
                    w16.Expand = false;
                    bindings["SharpTranslator.AboutDialog_ActionArea"] = w6;
                    cobj.DefaultWidth = 487;
                    cobj.DefaultHeight = 303;
                    bindings["SharpTranslator.AboutDialog"] = cobj;
                    w2.Show();
                    w4.Show();
                    w1.Show();
                    w10.Show();
                    w12.Show();
                    w9.Show();
                    w8.Show();
                    w7.Show();
                    w6.Show();
                    cobj.Show();
                    w7.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnClose")));
                }
                else {
                    if ((id == "SharpTranslator.MainWindow")) {
                        Gtk.Window cobj = ((Gtk.Window)(obj));
                        // Widget SharpTranslator.MainWindow
                        Gtk.UIManager w1 = new Gtk.UIManager();
                        Gtk.ActionGroup w2 = new Gtk.ActionGroup("Default");
                        Gtk.Action w3 = new Gtk.Action("File", "File", null, null);
                        w3.ShortLabel = "Archivo";
                        bindings["File"] = w3;
                        w2.Add(w3, null);
                        Gtk.Action w4 = new Gtk.Action("Edit", "Edit", null, null);
                        w4.ShortLabel = "Editar";
                        bindings["Edit"] = w4;
                        w2.Add(w4, null);
                        Gtk.Action w5 = new Gtk.Action("Learn", "Learn", null, "gtk-new");
                        w5.ShortLabel = "Learn";
                        bindings["Learn"] = w5;
                        w2.Add(w5, null);
                        Gtk.Action w6 = new Gtk.Action("floppy", null, null, "gtk-floppy");
                        bindings["floppy"] = w6;
                        w2.Add(w6, null);
                        Gtk.Action w7 = new Gtk.Action("LearnWords", "Learn words", null, "gtk-new");
                        w7.ShortLabel = "Learn ";
                        bindings["LearnWords"] = w7;
                        w2.Add(w7, null);
                        Gtk.Action w8 = new Gtk.Action("AddLanguage", "Add Language", null, "gtk-add");
                        w8.ShortLabel = "Exit";
                        bindings["AddLanguage"] = w8;
                        w2.Add(w8, null);
                        Gtk.Action w9 = new Gtk.Action("Cut", "Cut", null, "gtk-cut");
                        w9.ShortLabel = "Cut";
                        bindings["Cut"] = w9;
                        w2.Add(w9, null);
                        Gtk.Action w10 = new Gtk.Action("Copy", "Copy", null, "gtk-copy");
                        w10.ShortLabel = "Copy";
                        bindings["Copy"] = w10;
                        w2.Add(w10, null);
                        Gtk.Action w11 = new Gtk.Action("Paste", "Paste", null, "gtk-paste");
                        w11.ShortLabel = "Paste";
                        bindings["Paste"] = w11;
                        w2.Add(w11, null);
                        Gtk.Action w12 = new Gtk.Action("Help", "Help", null, null);
                        w12.ShortLabel = "Help";
                        bindings["Help"] = w12;
                        w2.Add(w12, null);
                        Gtk.Action w13 = new Gtk.Action("About", "About", null, "gnome-stock-about");
                        w13.ShortLabel = "About";
                        bindings["About"] = w13;
                        w2.Add(w13, null);
                        Gtk.Action w14 = new Gtk.Action("ImportDictionary", "Import Dictionary", null, "gnome-stock-book-blue");
                        w14.ShortLabel = "Import Dictionary";
                        bindings["ImportDictionary"] = w14;
                        w2.Add(w14, null);
                        Gtk.Action w15 = new Gtk.Action("Preferences", "Preferences", null, "gtk-preferences");
                        w15.ShortLabel = "Preferences";
                        bindings["Preferences"] = w15;
                        w2.Add(w15, null);
                        Gtk.Action w16 = new Gtk.Action("Close", "Close", null, "gtk-close");
                        w16.ShortLabel = "Close";
                        bindings["Close"] = w16;
                        w2.Add(w16, null);
                        w1.InsertActionGroup(w2, 0);
                        cobj.AddAccelGroup(w1.AccelGroup);
                        cobj.WindowPosition = ((Gtk.WindowPosition)(1));
                        cobj.Icon = Gtk.IconTheme.Default.LoadIcon("stock_book_open", 16, 0);
                        cobj.Name = "SharpTranslator.MainWindow";
                        cobj.Events = ((Gdk.EventMask)(0));
                        // Container child SharpTranslator.MainWindow.Gtk.Container+ContainerChild
                        Gtk.VBox w17 = new Gtk.VBox();
                        w17.Name = "vbox1";
                        w17.Events = ((Gdk.EventMask)(0));
                        // Container child vbox1.Gtk.Box+BoxChild
                        w1.AddUiFromString("<ui><menubar name='menubar1'><menu action='File'><menuitem action='LearnWords'/><menuitem action='AddLanguage'/><menuitem action='ImportDictionary'/><menuitem action='Close'/></menu><menu action='Edit'><menuitem action='Cut'/><menuitem action='Copy'/><menuitem action='Paste'/><menuitem action='Preferences'/></menu><menu action='Help'><menuitem action='About'/></menu></menubar></ui>");
                        Gtk.MenuBar w18 = ((Gtk.MenuBar)(w1.GetWidget("/menubar1")));
                        w18.Name = "menubar1";
                        w18.Events = ((Gdk.EventMask)(0));
                        bindings["menubar1"] = w18;
                        w17.Add(w18);
                        Gtk.Box.BoxChild w19 = ((Gtk.Box.BoxChild)(w17[w18]));
                        w19.Fill = false;
                        w19.Expand = false;
                        w19.Position = 0;
                        // Container child vbox1.Gtk.Box+BoxChild
                        w1.AddUiFromString("<ui><toolbar name='toolbar1'><toolitem action='Learn'/></toolbar></ui>");
                        Gtk.Toolbar w20 = ((Gtk.Toolbar)(w1.GetWidget("/toolbar1")));
                        w20.Tooltips = false;
                        w20.ShowArrow = false;
                        w20.IconSize = ((Gtk.IconSize)(2));
                        w20.ToolbarStyle = ((Gtk.ToolbarStyle)(2));
                        w20.Name = "toolbar1";
                        w20.Events = ((Gdk.EventMask)(0));
                        bindings["toolbar1"] = w20;
                        w17.Add(w20);
                        Gtk.Box.BoxChild w21 = ((Gtk.Box.BoxChild)(w17[w20]));
                        w21.Fill = false;
                        w21.Expand = false;
                        w21.Position = 1;
                        // Container child vbox1.Gtk.Box+BoxChild
                        Gtk.HBox w22 = new Gtk.HBox();
                        w22.BorderWidth = ((uint)(3));
                        w22.Homogeneous = true;
                        w22.Name = "hbox2";
                        w22.Events = ((Gdk.EventMask)(0));
                        // Container child hbox2.Gtk.Box+BoxChild
                        Gtk.Label w23 = new Gtk.Label();
                        w23.LabelProp = "Source Language:";
                        w23.Name = "labelSource";
                        w23.Events = ((Gdk.EventMask)(0));
                        bindings["labelSource"] = w23;
                        w22.Add(w23);
                        Gtk.Box.BoxChild w24 = ((Gtk.Box.BoxChild)(w22[w23]));
                        w24.Fill = false;
                        w24.Expand = false;
                        w24.Position = 0;
                        // Container child hbox2.Gtk.Box+BoxChild
                        Gtk.ComboBox w25 = Gtk.ComboBox.NewText();
                        w25.Name = "comboSource";
                        w25.Events = ((Gdk.EventMask)(0));
                        bindings["comboSource"] = w25;
                        w22.Add(w25);
                        Gtk.Box.BoxChild w26 = ((Gtk.Box.BoxChild)(w22[w25]));
                        w26.Fill = false;
                        w26.Expand = false;
                        w26.Position = 1;
                        // Container child hbox2.Gtk.Box+BoxChild
                        Gtk.Label w27 = new Gtk.Label();
                        w27.LabelProp = "Target Language:";
                        w27.Name = "labelTarget";
                        w27.Events = ((Gdk.EventMask)(0));
                        bindings["labelTarget"] = w27;
                        w22.Add(w27);
                        Gtk.Box.BoxChild w28 = ((Gtk.Box.BoxChild)(w22[w27]));
                        w28.Fill = false;
                        w28.Expand = false;
                        w28.Position = 2;
                        // Container child hbox2.Gtk.Box+BoxChild
                        Gtk.ComboBox w29 = Gtk.ComboBox.NewText();
                        w29.Name = "comboTarget";
                        w29.Events = ((Gdk.EventMask)(0));
                        bindings["comboTarget"] = w29;
                        w22.Add(w29);
                        Gtk.Box.BoxChild w30 = ((Gtk.Box.BoxChild)(w22[w29]));
                        w30.Fill = false;
                        w30.Expand = false;
                        w30.Position = 3;
                        bindings["hbox2"] = w22;
                        w17.Add(w22);
                        Gtk.Box.BoxChild w31 = ((Gtk.Box.BoxChild)(w17[w22]));
                        w31.Fill = false;
                        w31.Expand = false;
                        w31.Position = 2;
                        // Container child vbox1.Gtk.Box+BoxChild
                        Gtk.ScrolledWindow w32 = new Gtk.ScrolledWindow();
                        w32.VscrollbarPolicy = ((Gtk.PolicyType)(1));
                        w32.HscrollbarPolicy = ((Gtk.PolicyType)(1));
                        w32.Name = "scrolledwindow1";
                        w32.CanFocus = true;
                        w32.Events = ((Gdk.EventMask)(0));
                        // Container child scrolledwindow1.Gtk.Container+ContainerChild
                        Gtk.TreeView w33 = new Gtk.TreeView();
                        w33.Name = "treeviewResults";
                        w33.CanFocus = true;
                        w33.Events = ((Gdk.EventMask)(0));
                        bindings["treeviewResults"] = w33;
                        w32.Add(w33);
                        bindings["scrolledwindow1"] = w32;
                        w17.Add(w32);
                        Gtk.Box.BoxChild w35 = ((Gtk.Box.BoxChild)(w17[w32]));
                        w35.Position = 3;
                        // Container child vbox1.Gtk.Box+BoxChild
                        Gtk.HBox w36 = new Gtk.HBox();
                        w36.BorderWidth = ((uint)(3));
                        w36.Spacing = 5;
                        w36.Name = "hbox3";
                        w36.Events = ((Gdk.EventMask)(0));
                        // Container child hbox3.Gtk.Box+BoxChild
                        Gtk.Label w37 = new Gtk.Label();
                        w37.LabelProp = "Word:";
                        w37.Name = "labelWord";
                        w37.Events = ((Gdk.EventMask)(0));
                        bindings["labelWord"] = w37;
                        w36.Add(w37);
                        Gtk.Box.BoxChild w38 = ((Gtk.Box.BoxChild)(w36[w37]));
                        w38.Fill = false;
                        w38.Expand = false;
                        w38.Position = 0;
                        // Container child hbox3.Gtk.Box+BoxChild
                        Gtk.Entry w39 = new Gtk.Entry();
                        w39.IsEditable = true;
                        w39.InvisibleChar = '●';
                        w39.Name = "entryKeyword";
                        w39.CanFocus = true;
                        w39.CanDefault = true;
                        w39.Events = ((Gdk.EventMask)(0));
                        bindings["entryKeyword"] = w39;
                        w36.Add(w39);
                        Gtk.Box.BoxChild w40 = ((Gtk.Box.BoxChild)(w36[w39]));
                        w40.Position = 1;
                        // Container child hbox3.Gtk.Box+BoxChild
                        Gtk.Button w41 = new Gtk.Button();
                        Gtk.Tooltips w42 = new Gtk.Tooltips();
                        w42.SetTip(w41, "Search keyword", "Search keyword");
                        w41.Name = "buttonSearch";
                        w41.CanFocus = true;
                        w41.Events = ((Gdk.EventMask)(0));
                        // Container child buttonSearch.Gtk.Container+ContainerChild
                        Gtk.Alignment w43 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
                        w43.Name = "GtkAlignment";
                        w43.Events = ((Gdk.EventMask)(0));
                        // Container child GtkAlignment.Gtk.Container+ContainerChild
                        Gtk.HBox w44 = new Gtk.HBox();
                        w44.Spacing = 2;
                        w44.Name = "GtkHBox";
                        w44.Events = ((Gdk.EventMask)(0));
                        // Container child GtkHBox.Gtk.Container+ContainerChild
                        Gtk.Image w45 = new Gtk.Image();
                        w45.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-find", 16, 0);
                        w45.Name = "image4";
                        w45.Events = ((Gdk.EventMask)(0));
                        bindings["image4"] = w45;
                        w44.Add(w45);
                        // Container child GtkHBox.Gtk.Container+ContainerChild
                        Gtk.Label w47 = new Gtk.Label();
                        w47.LabelProp = "Search";
                        w47.Name = "GtkLabel";
                        w47.Events = ((Gdk.EventMask)(0));
                        bindings["GtkLabel"] = w47;
                        w44.Add(w47);
                        bindings["GtkHBox"] = w44;
                        w43.Add(w44);
                        bindings["GtkAlignment"] = w43;
                        w41.Add(w43);
                        bindings["buttonSearch"] = w41;
                        w36.Add(w41);
                        Gtk.Box.BoxChild w51 = ((Gtk.Box.BoxChild)(w36[w41]));
                        w51.Fill = false;
                        w51.Expand = false;
                        w51.Position = 2;
                        bindings["hbox3"] = w36;
                        w17.Add(w36);
                        Gtk.Box.BoxChild w52 = ((Gtk.Box.BoxChild)(w17[w36]));
                        w52.Fill = false;
                        w52.Expand = false;
                        w52.Position = 4;
                        // Container child vbox1.Gtk.Box+BoxChild
                        Gtk.HBox w53 = new Gtk.HBox();
                        w53.BorderWidth = ((uint)(3));
                        w53.Spacing = 5;
                        w53.Name = "hbox4";
                        w53.Events = ((Gdk.EventMask)(0));
                        // Container child hbox4.Gtk.Box+BoxChild
                        Gtk.Label w54 = new Gtk.Label();
                        w54.LabelProp = "Expression:";
                        w54.Name = "labelExpression";
                        w54.Events = ((Gdk.EventMask)(0));
                        bindings["labelExpression"] = w54;
                        w53.Add(w54);
                        Gtk.Box.BoxChild w55 = ((Gtk.Box.BoxChild)(w53[w54]));
                        w55.Fill = false;
                        w55.Expand = false;
                        w55.Position = 0;
                        // Container child hbox4.Gtk.Box+BoxChild
                        Gtk.Entry w56 = new Gtk.Entry();
                        w56.IsEditable = true;
                        w56.InvisibleChar = '●';
                        w56.Name = "entryExpression";
                        w56.CanFocus = true;
                        w56.Events = ((Gdk.EventMask)(0));
                        bindings["entryExpression"] = w56;
                        w53.Add(w56);
                        Gtk.Box.BoxChild w57 = ((Gtk.Box.BoxChild)(w53[w56]));
                        w57.Position = 1;
                        // Container child hbox4.Gtk.Box+BoxChild
                        Gtk.Button w58 = new Gtk.Button();
                        w42.SetTip(w58, "Search keyword", "Search keyword");
                        w58.Name = "buttonSearchExpression";
                        w58.CanFocus = true;
                        w58.Events = ((Gdk.EventMask)(0));
                        // Container child buttonSearchExpression.Gtk.Container+ContainerChild
                        Gtk.Alignment w59 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
                        w59.Name = "GtkAlignment";
                        w59.Events = ((Gdk.EventMask)(0));
                        // Container child GtkAlignment.Gtk.Container+ContainerChild
                        Gtk.HBox w60 = new Gtk.HBox();
                        w60.Spacing = 2;
                        w60.Name = "GtkHBox";
                        w60.Events = ((Gdk.EventMask)(0));
                        // Container child GtkHBox.Gtk.Container+ContainerChild
                        Gtk.Image w61 = new Gtk.Image();
                        w61.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-find", 16, 0);
                        w61.Name = "image5";
                        w61.Events = ((Gdk.EventMask)(0));
                        bindings["image5"] = w61;
                        w60.Add(w61);
                        // Container child GtkHBox.Gtk.Container+ContainerChild
                        Gtk.Label w63 = new Gtk.Label();
                        w63.LabelProp = "Search";
                        w63.Name = "GtkLabel";
                        w63.Events = ((Gdk.EventMask)(0));
                        bindings["GtkLabel"] = w63;
                        w60.Add(w63);
                        bindings["GtkHBox"] = w60;
                        w59.Add(w60);
                        bindings["GtkAlignment"] = w59;
                        w58.Add(w59);
                        bindings["buttonSearchExpression"] = w58;
                        w53.Add(w58);
                        Gtk.Box.BoxChild w67 = ((Gtk.Box.BoxChild)(w53[w58]));
                        w67.Fill = false;
                        w67.Expand = false;
                        w67.Position = 2;
                        bindings["hbox4"] = w53;
                        w17.Add(w53);
                        Gtk.Box.BoxChild w68 = ((Gtk.Box.BoxChild)(w17[w53]));
                        w68.Fill = false;
                        w68.Expand = false;
                        w68.Position = 5;
                        // Container child vbox1.Gtk.Box+BoxChild
                        Gtk.HSeparator w69 = new Gtk.HSeparator();
                        w69.Name = "hseparator1";
                        w69.Events = ((Gdk.EventMask)(0));
                        bindings["hseparator1"] = w69;
                        w17.Add(w69);
                        Gtk.Box.BoxChild w70 = ((Gtk.Box.BoxChild)(w17[w69]));
                        w70.Fill = false;
                        w70.Expand = false;
                        w70.Position = 6;
                        // Container child vbox1.Gtk.Box+BoxChild
                        Gtk.HButtonBox w71 = new Gtk.HButtonBox();
                        w71.BorderWidth = ((uint)(3));
                        w71.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                        w71.Name = "hbuttonbox1";
                        w71.Events = ((Gdk.EventMask)(0));
                        // Container child hbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
                        Gtk.Button w72 = new Gtk.Button();
                        w72.Name = "buttonClose";
                        w72.CanFocus = true;
                        w72.Events = ((Gdk.EventMask)(0));
                        // Container child buttonClose.Gtk.Container+ContainerChild
                        Gtk.Alignment w73 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
                        w73.Name = "GtkAlignment";
                        w73.Events = ((Gdk.EventMask)(0));
                        // Container child GtkAlignment.Gtk.Container+ContainerChild
                        Gtk.HBox w74 = new Gtk.HBox();
                        w74.Spacing = 2;
                        w74.Name = "GtkHBox";
                        w74.Events = ((Gdk.EventMask)(0));
                        // Container child GtkHBox.Gtk.Container+ContainerChild
                        Gtk.Image w75 = new Gtk.Image();
                        w75.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-close", 16, 0);
                        w75.Name = "image6";
                        w75.Events = ((Gdk.EventMask)(0));
                        bindings["image6"] = w75;
                        w74.Add(w75);
                        // Container child GtkHBox.Gtk.Container+ContainerChild
                        Gtk.Label w77 = new Gtk.Label();
                        w77.LabelProp = "Close";
                        w77.Name = "GtkLabel";
                        w77.Events = ((Gdk.EventMask)(0));
                        bindings["GtkLabel"] = w77;
                        w74.Add(w77);
                        bindings["GtkHBox"] = w74;
                        w73.Add(w74);
                        bindings["GtkAlignment"] = w73;
                        w72.Add(w73);
                        bindings["buttonClose"] = w72;
                        w71.Add(w72);
                        Gtk.ButtonBox.ButtonBoxChild w81 = ((Gtk.ButtonBox.ButtonBoxChild)(w71[w72]));
                        w81.Fill = false;
                        w81.Expand = false;
                        bindings["hbuttonbox1"] = w71;
                        w17.Add(w71);
                        Gtk.Box.BoxChild w82 = ((Gtk.Box.BoxChild)(w17[w71]));
                        w82.Fill = false;
                        w82.Expand = false;
                        w82.Position = 7;
                        bindings["vbox1"] = w17;
                        cobj.Add(w17);
                        cobj.DefaultWidth = 480;
                        cobj.DefaultHeight = 480;
                        bindings["SharpTranslator.MainWindow"] = cobj;
                        w18.Show();
                        w20.Show();
                        w23.Show();
                        w25.Show();
                        w27.Show();
                        w29.Show();
                        w22.Show();
                        w33.Show();
                        w32.Show();
                        w37.Show();
                        w39.Show();
                        w45.Show();
                        w47.Show();
                        w44.Show();
                        w43.Show();
                        w41.Show();
                        w36.Show();
                        w54.Show();
                        w56.Show();
                        w61.Show();
                        w63.Show();
                        w60.Show();
                        w59.Show();
                        w58.Show();
                        w53.Show();
                        w69.Show();
                        w75.Show();
                        w77.Show();
                        w74.Show();
                        w73.Show();
                        w72.Show();
                        w71.Show();
                        w17.Show();
                        cobj.Show();
                        cobj.DeleteEvent += ((Gtk.DeleteEventHandler)(System.Delegate.CreateDelegate(typeof(Gtk.DeleteEventHandler), cobj, "OnDeleteEvent")));
                        w5.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnLearn")));
                        w7.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnLearn")));
                        w13.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnAbout")));
                        w16.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnClose")));
                        w39.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnSearch")));
                        w41.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnSearch")));
                        w56.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnSearchExpression")));
                        w58.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnSearchExpression")));
                        w72.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnClose")));
                    }
                }
            }
            System.Reflection.FieldInfo[] fields = obj.GetType().GetFields(((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) | System.Reflection.BindingFlags.Instance));
            for (int n = 0; (n < fields.Length); n = (n + 1)) {
                System.Reflection.FieldInfo field = fields[n];
                object widget = bindings[field.Name];
                if (((widget != null) && field.FieldType.IsInstanceOfType(widget))) {
                    field.SetValue(obj, widget);
                }
            }
        }
    }
    
    internal class ActionGroups {
        
        public static Gtk.ActionGroup GetActionGroup(System.Type type) {
            return Stetic.ActionGroups.GetActionGroup(type.FullName);
        }
        
        public static Gtk.ActionGroup GetActionGroup(string name) {
            return null;
        }
    }
    
}
